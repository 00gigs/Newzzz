import React, { useState, useEffect } from "react";
import { ReadStory } from "@/app/firebase/firebasecrud/firebasecrud";
import Typography from '@mui/material/Typography';
import CardContent from '@mui/material/CardContent';
import Card from '@mui/material/Card';
import Link from '@mui/material/Link';


interface Story{
  url:string;
  title:string;
  urlToImage:string;
  description:string;
}


const Community = () => {
  // Initialize state for story
  const [story, setStory] = useState<Story | null>(null);

  useEffect(() => {
    const fetchStory = async () => {
      try {
        const fetchedStory = await ReadStory();
        console.log("Fetched story:", fetchedStory);
        setStory(fetchedStory); // Update state with fetched story
      } catch (error) {
        console.error(error);
      }
    };

    fetchStory();
  }, []); // Empty dependency array means this effect runs once on mount


  

  return (
    <div>
      {story ? (
        <Card>
          <CardContent>
            <Typography variant="h5" component="div">
              {story.title}
            </Typography>
            <Typography sx={{ mb: 1.5 }} color="text.secondary">
              {story.description}
            </Typography>
            {story.urlToImage && (
              <img src={story.urlToImage} alt={story.title} style={{ width: '100%', height: 'auto' }} />
            )}
            <Link href={story.url} target="_blank" rel="noopener noreferrer">
              Read More
            </Link>
          </CardContent>
        </Card>
      ) : (
        <Typography>No story found</Typography>
      )}
    </div>
  );
};

export default Community;
